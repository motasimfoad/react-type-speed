{"ast":null,"code":"var _jsxFileName = \"/Users/charchill/Work/Projects/react-type-speed/src/Components/TextArea/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Row, Col, Jumbotron } from 'react-bootstrap';\nimport '../TextArea/textarea.css';\n\nfunction TextArea(props) {\n  const [currentText, setCurrentText] = useState(props.currentText);\n  const [testText, setTestText] = useState(currentText.split());\n  const [userText, setUserText] = useState(props.userText);\n\n  const a = () => {\n    testText.map((s, i) => {\n      let color;\n\n      if (i < userText.length) {\n        color = s === userText[i] ? 'red' : 'green';\n        console.log(userText.length);\n      }\n\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: i,\n        style: {\n          backgroundColor: color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 20\n        }\n      }, s, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 70\n        }\n      }));\n    });\n  };\n\n  useEffect(() => {\n    setUserText(props.userText);\n    a();\n  });\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }\n  }, a(), currentText, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 31\n    }\n  }), userText)));\n}\n\nexport default TextArea;","map":{"version":3,"sources":["/Users/charchill/Work/Projects/react-type-speed/src/Components/TextArea/index.js"],"names":["React","useState","useEffect","Button","Row","Col","Jumbotron","TextArea","props","currentText","setCurrentText","testText","setTestText","split","userText","setUserText","a","map","s","i","color","length","console","log","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,SAA3B,QAA4C,iBAA5C;AACA,OAAO,0BAAP;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAACO,KAAK,CAACC,WAAP,CAA9C;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACQ,WAAW,CAACI,KAAZ,EAAD,CAAxC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAACO,KAAK,CAACM,QAAP,CAAxC;;AAEA,QAAME,CAAC,GAAG,MAAM;AACZL,IAAAA,QAAQ,CAACM,GAAT,CAAa,CAACC,CAAD,EAAGC,CAAH,KAAS;AAClB,UAAIC,KAAJ;;AACA,UAAID,CAAC,GAAGL,QAAQ,CAACO,MAAjB,EAAwB;AACvBD,QAAAA,KAAK,GAAGF,CAAC,KAAKJ,QAAQ,CAACK,CAAD,CAAd,GAAoB,KAApB,GAA4B,OAApC;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACO,MAArB;AAEA;;AACD,0BAAO;AAAM,QAAA,GAAG,EAAEF,CAAX;AAAc,QAAA,KAAK,EAAE;AAACK,UAAAA,eAAe,EAAEJ;AAAlB,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgDF,CAAhD,eAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlD,CAAP;AACH,KARD;AASH,GAVD;;AAYAhB,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,WAAW,CAACP,KAAK,CAACM,QAAP,CAAX;AACAE,IAAAA,CAAC;AACJ,GAHQ,CAAT;AAKF,sBAEK,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQA,CAAC,EAFT,EAIMP,WAJN,oBAImB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJnB,EAKMK,QALN,CADA,CADJ,CAFL;AAeD;;AAED,eAAeP,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Button, Row, Col, Jumbotron } from 'react-bootstrap';\nimport '../TextArea/textarea.css';\n\nfunction TextArea(props) {\n    const [currentText, setCurrentText] = useState(props.currentText);\n    const [testText, setTestText] = useState(currentText.split());\n    const [userText, setUserText] = useState(props.userText);\n\n    const a = () => {\n        testText.map((s,i) => {\n            let color;\n            if (i < userText.length){\n             color = s === userText[i] ? 'red' : 'green';\n             console.log(userText.length);\n             \n            }\n            return <span key={i} style={{backgroundColor: color}}>{s}<br /></span>\n        })\n    }\n    \n    useEffect(() => {\n        setUserText(props.userText);\n        a();\n    })\n\n  return (\n  \n       <Row>\n           <Col xl={12}>\n           <Jumbotron>\n               {\n                   a()\n               }\n                {currentText} <br />\n                {userText}\n           </Jumbotron>\n           </Col>\n       </Row>\n  \n  );\n}\n\nexport default TextArea;\n"]},"metadata":{},"sourceType":"module"}